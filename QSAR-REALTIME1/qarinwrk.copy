*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/* MACRO NAME = QARINWRK                                            */
*/*                                                                  */
*/* FUNCTION = MAPPING OF THE DYNAMIC STORAGE VARIABLES AND          */
*/*            CONSTANTS USED BY PROGRAMS 'QARINMSG' AND 'QARINOVF'. */
*/*                                                                  */
*/* INVOCATION = FIRST, MACRO VARIABLE 'IWRKTYPE' SHOULD BE SET      */
*/*              TO THE TYPE OF STRUCTURE DESIRED, EITHER            */
*/*              'DEF(DYNAM)' OR 'BASED(IWRKADDR)'.                  */
*/*                                                                  */
*/*              EXAMPLE: % IWRKTYPE = 'DEF(DYNAM)'.                 */
*/*                       %INCLUDE QSARMAC(QARINWRK).                */
*/*                                                                  */
*/*  CHANGE HISTORY:                                                 */
*/*                                                                  */
*/*+---------+-----------------------------------------+----------+  */
*/*|         |                                         |  FICHE   |  */
*/*|   DATE  |   DESCRIPTION                           |  FLAG    |  */
*/*|         |                                         |          |  */
*/*+---------+-----------------------------------------+----------+  */
*/*|11/30/83 | CREATED                                 |  -       |  */
*/*+---------+-----------------------------------------+----------+  */
*/*                                                                  */
*/********************************************************************/

 DCL 1 INMSGWRK IWRKTYPE,
       2 DWORK   CHAR(8),          /* DOUBLE WORD WORK AREA          */
       2 WKCWAP   PTR(31),         /* CWA POINTER                    */
       2 WKTWAP   PTR(31),         /* TWA POINTER                    */
       2 WKURP    PTR(31),         /* POINTER TO 'USERREC' AREA.     */
       2 WORKADDR PTR(31),         /* POINTER TO 'WORK'.             */
       2 CONMSPTR PTR(31),         /* POINTER TO 'CONMSG'.           */
       2 RETPT    PTR(31),         /* RETURN POINT FROM AN INTERNAL
                                      PROCEDURE                      */
       2 RETPT2   PTR(31),         /* RETURN POINT FROM AN INTERNAL
                                      PROCEDURE                      */
       2 RETPT3   PTR(31),         /* RETURN POINT FROM AN INTERNAL
                                      PROCEDURE                      */
       2 ISEGPTR  PTR(31),         /* CONTAINS ADDRESS OF 'ISEG'     */
       2 URPTR    PTR(31),         /* CONTAINS ADDRESS OF 'URSEG'    */
       2 MBAPTR   PTR(31),         /* CONTAINS ADDRESS OF 'MBASEG'   */
       2 MSGBFPTR PTR(31),         /* CONTAINS ADDRESS OF 'MSGBUFFR' */
       2 LCLPTR   PTR(31),         /* USED TO REFERENCE DATA SEGMENTS
                                      IN A LOGICAL QSAR RECORD.      */
       2 FTODAY   FIXED(31),       /* FIXED VERSION OF 'JTODAY'      */
       2 FCUTDATE FIXED(31),       /* FIXED VERSION OF 'JCUTDATE'    */
       2 RCODE   CHAR(4),          /* TEMPORARY STORAGE FOR RETURN
                                      CODES                          */
       2 QRETCODE FIXED(15),       /* QUEUE MANAGER RETURN CODE      */
       2 ILEN     FIXED(15),       /* LENGTH OF 'ISEGTEXT'.          */
       2 MBALEN   FIXED(15),       /* LENGTH OF QSAR DATA WITHIN A
                                      MESSAGE SEGMENT.               */
       2 SEGLEN   FIXED(15),       /* LENGTH OF DCS HDR + APPL MSG HDR
                                      + QSAR DATA IN A MSG SEG.      */
       2 MBARECSZ FIXED(15),       /* LENGTH OF LOGICAL QSAR RECORD  */
       2 MSGBFNDX FIXED(15),       /* OFFSET INTO 'MSGBUFFR'         */
       2 URSPACES FIXED(15),       /* NUMBER OF FREE SPACES IN THE
                                      'URSEG' ARRAY.                 */
       2 READCNT  FIXED(15),       /* MAX. NUMBER OF TIMES TO TRY TO
                                      READ THE USER RECORD.          */
       2 USEGPOS  FIXED(8),        /* POSITION OF A MSG SEG WITHIN THE
                                      USER RECORD.                   */
       2 MBAINDEX FIXED(8),        /* INDEX INTO 'MSGBUILD'          */
       2 SEGINDEX FIXED(8),        /* INDEX INTO 'URSEG'             */
       2 SEGTOTAL FIXED(8),        /* TOTAL NUMBER OF MSG SEGS IN THE
                                      LOGICAL QSAR RECORD.           */
       2 SEGNEED  FIXED(8),        /* NUMBER OF MSG SEGS NEEDED TO
                                      COMPLETE THE LOGICAL QSAR RECRD*/
       2 OPENSLOT(URSEGMAX) FIXED(8), /* IF OPENSLOT(I)=1, THEN
                                      POSITION I IN 'URSEG' WAS FREED
                                      WHEN A COMPLETE QSAR WAS BUILT.*/
       2 I        FIXED(8),        /* LOOP COUNTER                   */
       2 J        FIXED(8),        /* LOOP COUNTER                   */
       2 K        FIXED(8),        /* LOOP COUNTER                   */
       2 OPCODE   FIXED(8),        /* OPERATION TO BE TRACED         */
       2 TYPEFLD  FIXED(8),        /* TYPE OF OPERATION BEING TRACED */
       2 PRTLINE  CHAR(130) BDY(WORD), /* WORK AREA FOR 'QARTRACE'
                                      MACRO.                         */
       2 PGMINDEX FIXED(8),        /* INDEX OF PROGRAM BEING TRACED  */
       2 DATEYN   CHAR(1),         /* DATE INDICATOR (Y OR N) FOR
                                      TRACE MACRO.                   */
       2 USERID   CHAR(6),         /* PT USER ID TO BE TRACED        */
       2 PGMDATA  CHAR(100),       /* DATA TO BE TRACED              */
       2 JTODAY   CHAR(5),         /* TODAY'S DATE (JULIAN-YYDDD)    */
       2 JCUTDATE CHAR(5),         /* CUTOFF DATE FOR OLD MSG SEGS
                                      (JULIAN-YYDDD).                */
       2 TIME     CHAR(4),         /* CURRENT TIME (HHMM)            */
       2 OLDSEG   CHAR(6),         /* INFO ABOUT OLDEST MSG SEG IN THE
                                      USER RECORD.                   */
         3 OLDDATE CHAR(5),        /* JULIAN DATE OF OLDEST MSG SEG  */
         3 OLDPOS FIXED(8),        /* POSITION OF OLDEST MSG SEG WITHIN
                                      THE USER RECORD.               */
       2 RECRDKEY CHAR(7),         /* KEY OF USER RECORD TO BE READ  */
         3 KEYIDENT CHAR(1),       /* IDENTIFIES CONTENTS OF USER
                                      RECORD. 'I'=INBOUND MSG SEGS,
                                      'O'=OUTBOUND MSG SEGS.         */
         3 KEYVAL   CHAR(6),       /* EMPLOYEE SERIAL NUMBER         */
       2 ISEG CHAR(5+LENGTH(PTMSGSEG)), /* INCOMING MSG SEG RECEIVED
                                      FROM 'SR01'.                   */
         3 ISEGDATE CHAR(5),       /* JULIAN DATE ON WHICH MSG SEG WAS
                                      RECEIVED BY REG. BASE SERVICES.*/
         3 ISEGTEXT CHAR(LENGTH(PTMSGSEG)),   /* MESSAGE SEGMENT TEXT*/
       2 MSGBUILD(MSEGMAX) CHAR(2+(5+LENGTH(PTMSGSEG))),   /* MESSAGE
                                      BUILD AREA--ARRAY OF MESSAGE
                                      SEGMENTS. MAX OF 'MSEGMAX' MSG
                                      SEGS PER LOGICAL QSAR RECORD.  */
         3 MBAORG CHAR(1),         /* WHERE MSG SEG WAS FOUND. I=ISEG,
                                      U=USEG, O=OSEG.                */
         3 MBAPOS FIXED(8),        /* INDEX INTO USER RECORD WHERE MSG
                                      SEG WAS FOUND                  */
         3 MBASEG CHAR(5+LENGTH(PTMSGSEG)), /* THE ACTUAL MSG SEGMENT*/
           4 MBASEGDT CHAR(5),     /* JULIAN DATE ON WHICH MSG SEG WAS
                                      RECEIVED BY REG. BASE SERVICES.*/
           4 MBASEGTX CHAR(LENGTH(PTMSGSEG)), /* MESSAGE SEGMENT TEXT*/
       2 MSGBUFFR CHAR(QCHDRLEN+MSEGMAX*LENGTH(PTMSGTXT)),  /* HOLDS
                                      A LOGICAL QSAR TO BE PASSED
                                      TO 'QARHOST'            */
       2 FLAGS   BIT(8),           /* PROGRAM FLAGS                  */
         3 QMGRERR  BIT(1),        /* QUEUE MANAGER ERROR FLAG       */
         3 COMPLETE BIT(1),        /* ON=COMPLETE RECORD BUILT       */
         3 DUPSEG   BIT(1),        /* ON=DUPLICATE MSG SEG FOUND     */
         3 DUPWRITE BIT(1),        /*ON=DUP RECORD FOUND DURING WRITE*/
         3 FOUND    BIT(1),        /* ON=USER RECORD FOUND           */
         3 IOERR    BIT(1),        /* ON=CICS 'READ' ERROR OCCURRED  */
         3 *        BIT(2),        /* UNUSED                         */
       2 CONMSG  CHAR(80),         /* CONSOLE MESSAGE                */
       2 OPER     CHAR(4),         /* NAME OF QUEUE OPERATION        */
       2 QNAME    CHAR(8),         /* NAME OF QUEUE BEING ACCESSED   */
       2 EBCNUMBR CHAR(2),         /* EBCDIC VERSION OF 'PTANUMBR'   */
       2 EBCTOTAL CHAR(2),         /* EBCDIC VERSION OF 'PTATOTAL'   */
       2 EBCRECNO CHAR(9),         /* EBCDIC VERSION OF 'PTARECNO'   */
       2 TODAREA  CHAR(LENGTH(TODPARM)); /* WORK AREA FOR 'RAMTOD'   */

 DCL 1 USERREC CHAR(4089) BASED(WKURP), /*
                                      USER RECORD FROM 'QARINCP'.    */
       2 URKEY CHAR(7),            /* KEY ('I' + EMPLOYEE SERIAL)
                                      OF USER RECORD.                */
       2 URSEGCNT FIXED(8),        /* NUMBER OF MSG SEGS IN RECORD   */
       2 UROVFCNT FIXED(8),        /*NUMBER OF MSG SEGS IN 'QAROVERQ'*/
       2 URSEG(URSEGMAX) CHAR(5+LENGTH(PTMSGSEG)), /* ARRAY OF
                                      MSG SEGS FOR THIS USER         */
         3 URDATE CHAR(5),         /* JULIAN DATE ON WHICH MSG SEG WAS
                                      RECEIVED BY REG. BASE SERVICES.*/
         3 URPTSRC CHAR(LENGTH(PTMSGSEG));  /* MESSAGE SEGMENT TEXT*/

 DCL 1 QCMPLHDR CHAR(LENGTH(PTDCSHD)+LENGTH(PTAPPLMS)+1) BASED, /*
                                      HEADERS FOR THE COMPLETE LOGICAL
                                      QSAR RECORD PASSED TO 'QARHOST'*/
       2 QCDCSHD CHAR(LENGTH(PTDCSHD)), /* DCS HEADER.               */
       2 QCAPPLMS CHAR(LENGTH(PTAPPLMS)+1), /* APPLICATION MESSAGE
                                      HEADER. IN THIS SUB-STRUCTURE,
                                      ALL VARIABLES BEGIN WITH 'QCA'.*/
         3 QCAMSCTL CHAR(LENGTH(PTAMSCTL)), /* MESSAGE CONTROL INFO  */
         3 QCALEN   FIXED(15) BDY(BYTE), /* LENGTH OF MSG TEXT IN THE
                                      COMPLETE LOGICAL QSAR.         */
         3 QCARECNO FIXED(31) BDY(BYTE),    /* LOGICAL RECORD NUMBER */
         3 QCARESRV CHAR(LENGTH(PTARESRV)); /* RESERVED              */
 /*                                                                  */
 /********************************************************************/
 /* COMMON CONSTANTS (USED BY PROGRAMS 'QARINMSG' AND 'QARINOVF').   */
 /********************************************************************/

 DCL MSEGMAX  FIXED(15) CONSTANT(3), /* MAX. NUMBER OF MSG SEGS IN
                                        A LOGICAL QSAR RECORD.       */
     MSGBFLEN FIXED(15) CONSTANT(LENGTH(MSGBUFFR)), /* LENGTH OF
                                        'MSGBUFFR'.                  */
     URSEGMAX FIXED(15) CONSTANT(14),/* MAX. NUMBER OF MSG SEGS STORED
                                        IN THE 'URSEG' ARRAY.
                                        (URSEGMAX * (5+LEN(PTMSGSEG)))
                                        <= 4080.                     */
     MSEGLEN  FIXED(15) CONSTANT(LENGTH(URSEG)), /* LENGTH OF A MSG
                                       SEG STORED IN A USER RECORD.  */
     PTHDRLEN FIXED(15) CONSTANT(LENGTH(PTDCSHD)+LENGTH(PTAPPLMS)), /*
                                        LENGTH OF HEADERS IN MSG SEG */
     QCHDRLEN FIXED(15) CONSTANT(LENGTH(QCDCSHD)+LENGTH(QCAPPLMS)), /*
                                        LENGTH OF HEADERS IN THE
                                        COMPLETE LOGICAL QSAR.       */
     SEGAGE   FIXED(31) CONSTANT(7); /* MAX. AGE, IN DAYS, OF MSG SEGS
                                       STORED IN USER RECORD.        */


