*/********************************************************************/
*/*                                                                  */
*/* MACRO NAME = QARCPCOM                                            */
*/*                                                                  */
*/* FUNCTION = DECLARES FOR THE COMMON VARIABLES USED BY PROGRAMS    */
*/*            'QARCPSMN' AND 'QARCPSWR'. THE VARIABLES ARE          */
*/*            INITIALLY DECLARED IN 'QARCPSMN' BUT ARE ALSO         */
*/*            REFERENCED BY 'QARCPSWR'.                             */
*/*                                                                  */
*/* INVOCATION = MACRO VARIABLE 'QCOMLOC' SHOULD BE SET TO 'YES'     */
*/*              IF AN 'EXTERNAL LOCAL' STRUCTURE IS DESIRED OR TO   */
*/*              'NO' FOR AN 'EXTERNAL NONLOCAL' STRUCTURE.          */
*/*                                                                  */
*/*              EXAMPLE: %QCOMLOC = 'YES'.                          */
*/*                       %INCLUDE SYSLIB(QARCPCOM).                 */
*/*                                                                  */
*/*  CHANGE HISTORY:                                                 */
*/*                                                                  */
*/*+---------+-----------------------------------------+----------+  */
*/*|         |                                         |          |  */
*/*|   DATE  |   DESCRIPTION                           |  FLAG    |  */
*/*|         |                                         |          |  */
*/*+---------+-----------------------------------------+----------+  */
*/*|05/08/84 | CREATED                                 |  -       |  */
*/*+---------+-----------------------------------------+----------+  */
*/*                                                                  */
*/********************************************************************/

 %IF QCOMLOC='NO' %THEN %GOTO NLOCCOM;
 DCL 1 CPSCOMMN BDY(DWORD) EXT LOCAL,    /* COMMON DECLARES          */
 %GOTO STRTCOM;
 %NLOCCOM:;
 DCL 1 CPSCOMMN BDY(DWORD) EXT NONLOCAL, /* COMMON DECLARES          */

 %STRTCOM:;
       2 DWORK   CHAR(8),            /* DOUBLE WORD WORK AREA        */
       2 BINDATA CHAR(4) BDY(WORD),  /* WORK AREA FOR CONVERTING
                                        NUMERIC DATA.                */
         3 BDATA FIXED(31),
       2 STARTPT  FIXED(15),         /* START POINT FOR SUBSCRIPTING */
       2 ENDPT    FIXED(15),         /* END POINT FOR SUBSCRIPTING   */
       2 FRSTPART FIXED(15),         /* IDENTIFIES FIRST ENTRY IN
                                        INTERMEDIATE PARTS ARRAY TO
                                        BE WRITTEN WITH AN IPAR
                                        RECORD.                      */
       2 LASTPART FIXED(15),         /* IDENTIFIES LAST ENTRY IN
                                        INTERMEDIATE PARTS ARRAY TO
                                        BE WRITTEN WITH AN IPAR
                                        RECORD.                      */
       2 COUNTERS,                   /* PROGRAM COUNTERS             */
         3 CTRCVD   FIXED(15),       /* NUMBER OF QSAR RECORDS
                                             RECEIVED.               */
         3 CTPARTS  FIXED(15),       /* NUMBER OF ENTRIES IN THE
                                        INTERMEDIATE PARTS ARRAY.    */
         3 CTIPAR   FIXED(15),       /* NUMBER OF RECORDS WRITTEN TO
                                        THE IPAR OUTPUT FILE.        */
         3 CTPSAR   FIXED(15),       /* NUMBER OF RECORDS WRITTEN TO
                                        THE PSAR OUTPUT FILE.        */
         3 CTCOMNT  FIXED(15),       /* NUMBER OF RECORDS WRITTEN TO
                                        THE NARRATIVE OUTPUT FILE.   */
         3 CTEXCPT  FIXED(15),       /* NUMBER OF RECORDS WRITTEN TO
                                        THE EXCEPTION OUTPUT FILE.   */
         3 CTPTRL   FIXED(15),       /* NUMBER OF PARTS TRAILERS
                                        GENERATED BY 'QARCPSMN'.     */
       2 INDATA  CHAR(50),          /* CURRENT FIELD IN 'INTERMDT'   */
       2 SITEID  CHAR(9),           /* IDENTIFIES THE SITE IN WHICH
                                      'QARCPSWR' IS RUNNING.         */
       2 RUNDATE CHAR(6),           /* DATE (MMDDYY) ON WHICH
                                       'QARCPSRC' IS RUNNING.        */
       2 EBCNUMBR  CHAR(5),         /* EBCDIC VERSION OF A NUMERIC
                                       VALUE.                        */
       2 TIME      CHAR(8),         /* CURRENT TIME (0HHMMSST)       */
       2 PGMFLAGS BIT(16),          /* PROGRAM FLAGS                 */
         3 PARTFLG  BIT(1),         /* ON=PARTS SEG IS BEING
                                          PROCESSED.                 */
         3 COMNTFLG BIT(1),         /* ON=QSAR RECORD CONTAINS
                                         COMMENTS.                   */
         3 EXCPTFLG BIT(1),          /* ON=QSAR RECORD CONTAINS
                                         EXCEPTION REPORTING DATA.   */
         3 PTRLRFLG BIT(1),          /* ON=PARTS TRAILER RECORD
                                          SHOULD BE CREATED.         */
         3 WRTCTRL  BIT(1),          /* ON=WRITE CONTROL RECORD TO
                                        OUTPUT FILE, OFF=WRITE DATA
                                        RECORD TO OUTPUT FILE.       */
         3 WRTIPHDR BIT(1),          /* ON=WRITE HEADER RECORD TO
                                        IPAR FILE.                   */
         3 WRTPSHDR BIT(1),          /* ON=WRITE HEADER RECORD TO
                                        PSAR FILE.                   */
         3 WRTNRHDR BIT(1),          /* ON=WRITE HEADER RECORD TO
                                        NARRATIVE FILE.              */
         3 WRTEXHDR BIT(1),          /* ON=WRITE HEADER RECORD TO
                                        EXCEPTION REPORTING FILE.    */
         3 *        BIT(7);          /* UNUSED                       */

*/********************************************************************/
*/*             COMMON CONSTANTS                                     */
*/********************************************************************/

 %IF QCOMLOC='NO' %THEN %GOTO NLOCCM2;
  DCL   INDATLEN FIXED(15) EXT STATIC LOCAL INIT(LENGTH(INDATA)),
        BINDATLN FIXED(15) EXT STATIC LOCAL INIT(LENGTH(BINDATA)),
        BLANKS CHAR(50)  EXT STATIC LOCAL INIT(' '); /* USED TO TEST
                                               FOR BLANKS.           */
 %GOTO STRTCM2;

 %NLOCCM2:;
  DCL   INDATLEN FIXED(15) EXT NONLOCAL,     /* LENGTH OF 'INDATA'   */
        BINDATLN FIXED(15) EXT NONLOCAL,     /* LENGTH OF 'BINDATA'  */
        BLANKS CHAR(50)  EXT NONLOCAL;    /* USED TO TEST FOR BLANKS */
 %STRTCM2:;

